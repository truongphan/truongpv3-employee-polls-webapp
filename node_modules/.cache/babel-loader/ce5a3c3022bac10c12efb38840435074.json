{"ast":null,"code":"var _jsxFileName = \"/Users/truongphan/React/source/truongpv3-employee-polls-webapp/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref;\n\n  const unanswered = question => !question.optionOne.votes.includes(authedUser.id) && !question.optionTwo.votes.includes(authedUser.id);\n\n  const answered = question => question.optionOne.votes.includes(authedUser.id) || question.optionTwo.votes.includes(authedUser.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mt-9\",\n      \"data-testid\": \"heading\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mt-6\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: questions.filter(unanswered).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          question: question,\n          author: users[question.author]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mt-6\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: questions.filter(answered).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          question: question,\n          author: users[question.author]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref2;\n  return {\n    authedUser,\n    questions: Object.values(questions).sort((a, b) => b.timestamp - a.timestamp),\n    users\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Card","Dashboard","authedUser","questions","users","unanswered","question","optionOne","votes","includes","id","optionTwo","answered","filter","map","author","mapStateToProps","Object","values","sort","a","b","timestamp"],"sources":["/Users/truongphan/React/source/truongpv3-employee-polls-webapp/src/components/Dashboard.js"],"sourcesContent":["import {connect} from \"react-redux\";\nimport Card from \"./Card\";\n\nconst Dashboard = ({authedUser, questions, users}) => {\n\n    const unanswered = (question) => (!question.optionOne.votes.includes(authedUser.id)\n        && !question.optionTwo.votes.includes(authedUser.id));\n\n    const answered = (question) => (question.optionOne.votes.includes(authedUser.id)\n        || question.optionTwo.votes.includes(authedUser.id));\n\n    return (\n        <div>\n            <h1 className=\"text-3xl font-bold mt-9\" data-testid=\"heading\">Dashboard</h1>\n\n            <h2 className=\"text-2xl font-bold mt-6\">New Questions</h2>\n            <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {questions\n                    .filter(unanswered)\n                    .map((question) => (\n                        <li key={question.id}>\n                            <Card question={question} author={users[question.author]}/>\n                        </li>\n                    ))}\n            </ul>\n\n            <h2 className=\"text-2xl font-bold mt-6\">Done</h2>\n            <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {questions\n                    .filter(answered)\n                    .map((question) => (\n                        <li key={question.id}>\n                            <Card question={question} author={users[question.author]}/>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({authedUser, questions, users}) => ({\n    authedUser,\n    questions: Object.values(questions).sort(\n        (a, b) => b.timestamp - a.timestamp\n    ),\n    users,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,QAAoC;EAAA,IAAnC;IAACC,UAAD;IAAaC,SAAb;IAAwBC;EAAxB,CAAmC;;EAElD,MAAMC,UAAU,GAAIC,QAAD,IAAe,CAACA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CAAD,IAC3B,CAACJ,QAAQ,CAACK,SAAT,CAAmBH,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CADR;;EAGA,MAAME,QAAQ,GAAIN,QAAD,IAAeA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,KACzBJ,QAAQ,CAACK,SAAT,CAAmBH,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CADP;;EAGA,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,yBAAd;MAAwC,eAAY,SAApD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAI,SAAS,EAAC,yBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAI,SAAS,EAAC,uCAAd;MAAA,UACKP,SAAS,CACLU,MADJ,CACWR,UADX,EAEIS,GAFJ,CAESR,QAAD,iBACD;QAAA,uBACI,QAAC,IAAD;UAAM,QAAQ,EAAEA,QAAhB;UAA0B,MAAM,EAAEF,KAAK,CAACE,QAAQ,CAACS,MAAV;QAAvC;UAAA;UAAA;UAAA;QAAA;MADJ,GAAST,QAAQ,CAACI,EAAlB;QAAA;QAAA;QAAA;MAAA,QAHP;IADL;MAAA;MAAA;MAAA;IAAA,QAJJ,eAcI;MAAI,SAAS,EAAC,yBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdJ,eAeI;MAAI,SAAS,EAAC,uCAAd;MAAA,UACKP,SAAS,CACLU,MADJ,CACWD,QADX,EAEIE,GAFJ,CAESR,QAAD,iBACD;QAAA,uBACI,QAAC,IAAD;UAAM,QAAQ,EAAEA,QAAhB;UAA0B,MAAM,EAAEF,KAAK,CAACE,QAAQ,CAACS,MAAV;QAAvC;UAAA;UAAA;UAAA;QAAA;MADJ,GAAST,QAAQ,CAACI,EAAlB;QAAA;QAAA;QAAA;MAAA,QAHP;IADL;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH,CAnCD;;KAAMT,S;;AAqCN,MAAMe,eAAe,GAAG;EAAA,IAAC;IAACd,UAAD;IAAaC,SAAb;IAAwBC;EAAxB,CAAD;EAAA,OAAqC;IACzDF,UADyD;IAEzDC,SAAS,EAAEc,MAAM,CAACC,MAAP,CAAcf,SAAd,EAAyBgB,IAAzB,CACP,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SADnB,CAF8C;IAKzDlB;EALyD,CAArC;AAAA,CAAxB;;AAQA,eAAeL,OAAO,CAACiB,eAAD,CAAP,CAAyBf,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}